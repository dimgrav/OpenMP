#include <stdio.h>
#include <stdlib.h>
#include <omp.h>
#include <time.h>

int main (int argc, char** argv)
{
	int *A, *B, *C; // deiktes pinakwn
	int N; // mege8os pinakwn
	int i; // deikths
	int id, P; // diergasia, synolo diergasiwn
	
	#pragma omp parallel private(id)
	{
		id = omp_get_thread_num();
		if (id == 0)
		{
			printf("\nDwse mege8os pinakwn A kai B: ");
			scanf("%d", &N);
		}
	}
	
	A = malloc(N * sizeof(int));
	B = malloc(N * sizeof(int));
	C = malloc(N * sizeof(int));

	for (i = 0; i <N; i++)
	{
		A[i] = rand()%10;
		B[i] = rand()%10;
	}

	#pragma omp parallel for private(id)
		
		for (i = 0; i < N; i++)
		{
			id = omp_get_thread_num();
			printf("\nKomvos: %d, i: %d", id, i);
			C[i] = A[i] + B[i];
		}
	

	printf("\nPinakas A:\n");	
	for (i = 0; i < N; i++)
	{
		printf("%4d", A[i]);
	}
	printf("\n");
	printf("\nPinakas B:\n");	
	for (i = 0; i < N; i++)
	{
		printf("%4d", B[i]);
	}
	printf("\n");
	printf("\nPinakas C:\n");	
	for (i = 0; i < N; i++)
	{
		printf("%4d", C[i]);
	}
	printf("\n\n");
	return 0;
}


	

